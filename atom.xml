<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>👋Harry部落格</title>
  
  
  <link href="https://blog.ihogu.com/atom.xml" rel="self"/>
  
  <link href="https://blog.ihogu.com/"/>
  <updated>2023-05-08T07:29:38.619Z</updated>
  <id>https://blog.ihogu.com/</id>
  
  <author>
    <name>Harry</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python先顺序分组然后打乱分组顺序</title>
    <link href="https://blog.ihogu.com/posts/7810/"/>
    <id>https://blog.ihogu.com/posts/7810/</id>
    <published>2023-05-04T00:47:29.000Z</published>
    <updated>2023-05-08T07:29:38.619Z</updated>
    
    <content type="html"><![CDATA[<p>Python先顺序分组然后打乱分组顺序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 合并ts视频</span></span><br><span class="line"><span class="keyword">import</span> os,time ,random, shutil</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义循环次数</span></span><br><span class="line">loop_times = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#用来分组排序的数组</span></span><br><span class="line">mySortArr = []</span><br><span class="line">path = <span class="string">r&quot;D:\XXX\视频ts文件夹&quot;</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">    <span class="keyword">if</span> file.endswith(<span class="string">&#x27;.ts&#x27;</span>):</span><br><span class="line">       mySortArr.append(file)</span><br><span class="line"></span><br><span class="line"><span class="comment">#每个分组最小包含文件数</span></span><br><span class="line">maxFileNum = <span class="number">4</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_all_index</span>(<span class="params">arr, item</span>):</span><br><span class="line">    <span class="keyword">return</span> [i <span class="keyword">for</span> i, a <span class="keyword">in</span> <span class="built_in">enumerate</span>(arr) <span class="keyword">if</span> a == item]</span><br><span class="line">randomListMax = <span class="built_in">len</span>(mySortArr)*<span class="number">100</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sortA</span>(<span class="params">filelist</span>):</span><br><span class="line">    tempGroupList = []</span><br><span class="line">    <span class="comment">#分组</span></span><br><span class="line">    groupList = []</span><br><span class="line">    tempGroupLIst = []</span><br><span class="line">    tempGroupAppendIndex=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> tempGroupAppendIndex &lt; randomListMax+<span class="number">1</span>:</span><br><span class="line">      groupList.append(<span class="number">0</span>)</span><br><span class="line">      tempGroupAppendIndex += <span class="number">1</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    countNum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> files <span class="keyword">in</span> filelist:   <span class="comment">#遍历所有文件</span></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        countNum +=<span class="number">1</span></span><br><span class="line">        tempGroupList.append(files)</span><br><span class="line">        randomIndex = random.randint(<span class="number">0</span>,randomListMax)  </span><br><span class="line">        hasPlaceholder = find_all_index(groupList,tempGroupLIst)</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">len</span>(hasPlaceholder)!=<span class="number">0</span>):</span><br><span class="line">          randomIndex = random.randint(<span class="number">0</span>,randomListMax)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> countNum &gt;= maxFileNum :    </span><br><span class="line">             countNum = <span class="number">0</span>            </span><br><span class="line">            <span class="comment">#  print(randomIndex,&quot;randomIndex&quot;)      </span></span><br><span class="line">             rIndex = <span class="number">0</span></span><br><span class="line">             <span class="keyword">for</span> tempItem <span class="keyword">in</span> tempGroupList:</span><br><span class="line">                  rIndex+=<span class="number">1</span></span><br><span class="line">                  groupList[randomIndex+rIndex] = tempItem</span><br><span class="line">             tempItemR = <span class="built_in">reversed</span>(tempGroupList)    <span class="comment"># 倒序           </span></span><br><span class="line">             <span class="keyword">for</span> tempItem <span class="keyword">in</span> tempItemR:</span><br><span class="line">                  groupList[randomIndex+rIndex+<span class="built_in">len</span>(tempGroupLIst)] = tempItem    </span><br><span class="line">                  rIndex+=<span class="number">1</span>      </span><br><span class="line">             tempItemR = []</span><br><span class="line">             tempGroupList = []</span><br><span class="line"></span><br><span class="line">    removeGroupList = groupList</span><br><span class="line">    listRes = []</span><br><span class="line">    <span class="keyword">for</span> groupItemOld <span class="keyword">in</span> removeGroupList:      </span><br><span class="line">      <span class="keyword">if</span>(groupItemOld!=<span class="number">0</span>):</span><br><span class="line">        listRes.append(groupItemOld) </span><br><span class="line">    <span class="comment"># random.shuffle(filelist)</span></span><br><span class="line">    <span class="comment"># print(listRes,&quot;listRes&quot;)</span></span><br><span class="line">    <span class="keyword">return</span> listRes</span><br><span class="line"><span class="comment">#/sort$############################</span></span><br><span class="line"></span><br><span class="line">mySortArr = sortA(mySortArr)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 执行循环遍历</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, loop_times + <span class="number">1</span>):</span><br><span class="line">  <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>.txt&quot;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:     </span><br><span class="line">    <span class="keyword">for</span> content <span class="keyword">in</span> mySortArr:   </span><br><span class="line">        f.write(<span class="string">f&quot;file &#x27;<span class="subst">&#123;content&#125;</span>&#x27;\n&quot;</span>)</span><br><span class="line">    <span class="comment"># print(f&quot;&#123;i&#125;.txt 文件生成成功！&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#quit()</span></span><br><span class="line"><span class="comment"># 合并txt文件</span></span><br><span class="line">os.system(<span class="string">&#x27;copy /B ?*.txt output.txt&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;合并txt文件成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除生成的i.txt文件</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, loop_times + <span class="number">1</span>):</span><br><span class="line">    os.remove(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>.txt&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;i.txt 文件删除成功！&quot;</span>)</span><br><span class="line"><span class="comment"># 执行ffmpeg合并</span></span><br><span class="line">os.system(<span class="string">&#x27;ffmpeg -f concat -safe 0 -i output.txt -c copy 合成视频.mp4&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;ffmpeg合并成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;ok&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除 output.txt 文件</span></span><br><span class="line">os.remove(<span class="string">&#x27;output.txt&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;output.txt 文件删除成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除当前目录下所有.ts格式的视频文件</span></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">    <span class="keyword">if</span> filename.endswith(<span class="string">&#x27;.ts&#x27;</span>):</span><br><span class="line">        os.remove(filename)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;.ts格式 文件删除成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有前缀为images_的文件夹</span></span><br><span class="line"><span class="keyword">for</span> foldername <span class="keyword">in</span> os.listdir(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">    <span class="keyword">if</span> foldername.startswith(<span class="string">&#x27;images_&#x27;</span>):</span><br><span class="line">        shutil.rmtree(foldername)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;images_ 文件删除成功！&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Python先顺序分组然后打乱分组顺序&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 合并ts</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="python" scheme="https://blog.ihogu.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>fastadmin引入layui,并调用layui接口</title>
    <link href="https://blog.ihogu.com/posts/14531/"/>
    <id>https://blog.ihogu.com/posts/14531/</id>
    <published>2023-04-23T00:47:29.000Z</published>
    <updated>2023-05-08T07:29:38.622Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一种方式-全局引入"><a href="#第一种方式-全局引入" class="headerlink" title="第一种方式,全局引入"></a>第一种方式,全局引入</h2><h3 id="先去-layui-官网-下载整个仓库-有-dist-src-目录的"><a href="#先去-layui-官网-下载整个仓库-有-dist-src-目录的" class="headerlink" title="先去 layui 官网,下载整个仓库 , 有 dist,src 目录的"></a>先去 layui 官网,下载整个仓库 , 有 dist,src 目录的</h3><p><a href="https://gitee.com/layui/layui">https://gitee.com/layui/layui</a></p><h3 id="把下载的-layui-放到如下目录"><a href="#把下载的-layui-放到如下目录" class="headerlink" title="把下载的 layui 放到如下目录:"></a>把下载的 layui 放到如下目录:</h3><blockquote><p>public&#x2F;libs&#x2F;layui</p></blockquote><h3 id="在下面的文件里-添加-layui-paths-和-shim-中分别添加"><a href="#在下面的文件里-添加-layui-paths-和-shim-中分别添加" class="headerlink" title="在下面的文件里,添加 layui,paths 和 shim 中分别添加"></a>在下面的文件里,添加 layui,paths 和 shim 中分别添加</h3><blockquote><p>public&#x2F;assets&#x2F;js&#x2F;require-backend.js</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>.<span class="title function_">config</span>(&#123;</span><br><span class="line">  <span class="attr">paths</span>: &#123;</span><br><span class="line">    <span class="comment">//添加layui</span></span><br><span class="line">    <span class="attr">layui</span>: <span class="string">&quot;../libs/layui/src/layui&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// shim依赖配置</span></span><br><span class="line">  <span class="attr">shim</span>: &#123;</span><br><span class="line">    <span class="comment">//添加layui</span></span><br><span class="line">    <span class="attr">layui</span>: &#123;</span><br><span class="line">      <span class="attr">deps</span>: [<span class="string">&quot;css!../libs/layui/src/css/layui.css&quot;</span>],</span><br><span class="line">      <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;在这里init了layui&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">layui</span>.<span class="title function_">config</span>(&#123; <span class="attr">dir</span>: <span class="string">&quot;/assets/libs/layui/src/&quot;</span> &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="目标页-JS-调用"><a href="#目标页-JS-调用" class="headerlink" title="目标页 JS 调用"></a>目标页 JS 调用</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">define</span>([<span class="string">&quot;jquery&quot;</span>, <span class="string">&quot;bootstrap&quot;</span>, <span class="string">&quot;backend&quot;</span>, <span class="string">&quot;form&quot;</span>, <span class="string">&quot;table&quot;</span>, <span class="string">&quot;layui&quot;</span>], <span class="keyword">function</span> (<span class="params"></span></span><br><span class="line"><span class="params">  $,</span></span><br><span class="line"><span class="params">  <span class="literal">undefined</span>,</span></span><br><span class="line"><span class="params">  Backend,</span></span><br><span class="line"><span class="params">  Form,</span></span><br><span class="line"><span class="params">  Table,</span></span><br><span class="line"><span class="params">  layui</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> <span class="title class_">Controller</span> = &#123;</span><br><span class="line">    <span class="attr">index</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//在这里进行调用</span></span><br><span class="line">      layui.<span class="title function_">use</span>([<span class="string">&quot;form&quot;</span>, <span class="string">&quot;upload&quot;</span>], <span class="keyword">function</span> (<span class="params">form, upload</span>) &#123;&#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Controller</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>一键压缩打包前后台的JS和CSS, 根目录中执行下面命令后,在浏览器清除缓存刷新才能生效</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php think min -m all -r all</span><br></pre></td></tr></table></figure><h2 id="二-动态引入"><a href="#二-动态引入" class="headerlink" title="二:动态引入"></a>二:动态引入</h2><h3 id="首先在public-x2F-assets-x2F-js-x2F-backend-init-js中定义依赖配置"><a href="#首先在public-x2F-assets-x2F-js-x2F-backend-init-js中定义依赖配置" class="headerlink" title="首先在public&#x2F;assets&#x2F;js&#x2F;backend-init.js中定义依赖配置"></a>首先在public&#x2F;assets&#x2F;js&#x2F;backend-init.js中定义依赖配置</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">define</span>([<span class="string">&#x27;backend&#x27;</span>], <span class="keyword">function</span> (<span class="params">Backend</span>) &#123;</span><br><span class="line">    <span class="built_in">require</span>.<span class="title function_">config</span>(&#123;</span><br><span class="line">        <span class="attr">paths</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;layui&#x27;</span>: <span class="string">&#x27;../libs/layui/src/layui&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">shim</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;layui&#x27;</span>: &#123;</span><br><span class="line">                <span class="attr">deps</span>: [<span class="string">&#x27;css!../libs/layui/src/css/layui.css&#x27;</span>],</span><br><span class="line">                <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;在这里init了layui&quot;</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">layui</span>.<span class="title function_">config</span>(&#123; <span class="attr">dir</span>: <span class="string">&#x27;/assets/libs/layui/src/&#x27;</span> &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="目标页-JS-调用-1"><a href="#目标页-JS-调用-1" class="headerlink" title="目标页 JS 调用"></a>目标页 JS 调用</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">define</span>([<span class="string">&quot;jquery&quot;</span>, <span class="string">&quot;bootstrap&quot;</span>, <span class="string">&quot;backend&quot;</span>, <span class="string">&quot;form&quot;</span>, <span class="string">&quot;table&quot;</span>, <span class="string">&quot;layui&quot;</span>], <span class="keyword">function</span> (<span class="params"></span></span><br><span class="line"><span class="params">  $,</span></span><br><span class="line"><span class="params">  <span class="literal">undefined</span>,</span></span><br><span class="line"><span class="params">  Backend,</span></span><br><span class="line"><span class="params">  Form,</span></span><br><span class="line"><span class="params">  Table,</span></span><br><span class="line"><span class="params">  layui</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> <span class="title class_">Controller</span> = &#123;</span><br><span class="line">    <span class="attr">index</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//在这里进行调用</span></span><br><span class="line">      <span class="built_in">require</span>([<span class="string">&quot;layui&quot;</span>], <span class="keyword">function</span> (<span class="params"><span class="literal">undefined</span></span>) &#123;</span><br><span class="line">        layui.<span class="title function_">use</span>([<span class="string">&quot;form&quot;</span>, <span class="string">&quot;upload&quot;</span>], <span class="keyword">function</span> (<span class="params">form, upload</span>) &#123;&#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Controller</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>一键压缩打包前后台的JS和CSS, 根目录中执行下面命令后,在浏览器清除缓存刷新才能生效</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php think min -m all -r all</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第一种方式-全局引入&quot;&gt;&lt;a href=&quot;#第一种方式-全局引入&quot; class=&quot;headerlink&quot; title=&quot;第一种方式,全局引入&quot;&gt;&lt;/a&gt;第一种方式,全局引入&lt;/h2&gt;&lt;h3 id=&quot;先去-layui-官网-下载整个仓库-有-dist-src-目录的</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="php" scheme="https://blog.ihogu.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Python 文件夹内文件 批量打乱顺序后,重新排序,批量重命名</title>
    <link href="https://blog.ihogu.com/posts/272/"/>
    <id>https://blog.ihogu.com/posts/272/</id>
    <published>2023-04-22T00:47:29.000Z</published>
    <updated>2023-05-08T07:29:38.621Z</updated>
    
    <content type="html"><![CDATA[<p>手头有一个几万张图片需要进行打乱顺序,并重新命名,使用python来实现</p><p>第一步先对文件夹内的文件批量打乱顺序</p><p>第二步重新排序</p><p>第三步批量重命名</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os ,random , time</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rename</span>():</span><br><span class="line">    <span class="comment"># 配置</span></span><br><span class="line">    <span class="comment">#文件扩展名</span></span><br><span class="line">    filetype = <span class="string">&#x27;.png&#x27;</span></span><br><span class="line">    <span class="comment">#文件名前缀</span></span><br><span class="line">    filename = <span class="string">&#x27;&#x27;</span>  </span><br><span class="line">    <span class="comment"># 文件名位数,不足的前面补0</span></span><br><span class="line">    zfillNum = <span class="number">5</span></span><br><span class="line">    <span class="comment"># 在这里配置文件夹地址</span></span><br><span class="line">    path = <span class="string">r&quot;C:\Users\xxxx\Desktop\test&quot;</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    filelist = os.listdir(path)   <span class="comment">#该文件夹下所有的文件（包括文件夹）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#先打乱顺序 </span></span><br><span class="line">    random.shuffle(filelist)</span><br><span class="line">    <span class="keyword">for</span> files <span class="keyword">in</span> filelist:   <span class="comment">#遍历所有文件</span></span><br><span class="line">        Olddir = os.path.join(path, files)    <span class="comment">#原来的文件路径</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(Olddir):       <span class="comment">#如果是文件夹则跳过</span></span><br><span class="line">                <span class="keyword">continue</span>   </span><br><span class="line">        filenameRes = <span class="built_in">str</span>(<span class="built_in">int</span>(time.time())+random.randint(<span class="number">1000000</span>,<span class="number">88888888</span>))</span><br><span class="line">        Newdir = os.path.join(path, filenameRes + filetype)   <span class="comment">#新的文件路径</span></span><br><span class="line">        os.rename(Olddir, Newdir)    <span class="comment">#重命名</span></span><br><span class="line"></span><br><span class="line">    filelist = os.listdir(path)   <span class="comment">#该文件夹下所有的文件（包括文件夹）</span></span><br><span class="line">    <span class="keyword">for</span> files <span class="keyword">in</span> filelist:   <span class="comment">#遍历所有文件</span></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        Olddir = os.path.join(path, files)    <span class="comment">#原来的文件路径</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(Olddir):       <span class="comment">#如果是文件夹则跳过</span></span><br><span class="line">                <span class="keyword">continue</span>   </span><br><span class="line">        filenameNum = <span class="built_in">str</span>(i).zfill(zfillNum)</span><br><span class="line">        filenameRes = filename+filenameNum</span><br><span class="line">        Newdir = os.path.join(path, filenameRes + filetype)   <span class="comment">#新的文件路径</span></span><br><span class="line">        os.rename(Olddir, Newdir)    <span class="comment">#重命名</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    rename()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;手头有一个几万张图片需要进行打乱顺序,并重新命名,使用python来实现&lt;/p&gt;
&lt;p&gt;第一步先对文件夹内的文件批量打乱顺序&lt;/p&gt;
&lt;p&gt;第二步重新排序&lt;/p&gt;
&lt;p&gt;第三步批量重命名&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="python" scheme="https://blog.ihogu.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>VCARD手机相机扫码或微信扫码,直接保存到通讯录</title>
    <link href="https://blog.ihogu.com/posts/37059/"/>
    <id>https://blog.ihogu.com/posts/37059/</id>
    <published>2023-04-20T00:47:29.000Z</published>
    <updated>2023-05-08T07:29:38.619Z</updated>
    
    <content type="html"><![CDATA[<p>VCARD手机相机扫码或微信扫码,直接保存到通讯录<br>将以下内容生成二维码, 使用手机扫码时将自动弹出保存通讯录,兼容Android&#x2F;IOS</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BEGIN:VCARD</span><br><span class="line"></span><br><span class="line">VERSION:3.0</span><br><span class="line"></span><br><span class="line">N:名字</span><br><span class="line"></span><br><span class="line">ORG:公司名字</span><br><span class="line"></span><br><span class="line">TITLE:职位新人研发</span><br><span class="line"></span><br><span class="line">TEL;TYPE=WORK:18888886686</span><br><span class="line"></span><br><span class="line">TEL;TYPE=HOME:18888888888</span><br><span class="line"></span><br><span class="line">ADR;TYPE=HOME:;;地址1;;;;</span><br><span class="line"></span><br><span class="line">LABEL;TYPE=HOME:地址2</span><br><span class="line"></span><br><span class="line">,  </span><br><span class="line"></span><br><span class="line">EMAIL:email@gmail.com</span><br><span class="line"></span><br><span class="line">URL:www.abc.com</span><br><span class="line"></span><br><span class="line">BDAY:2023-04-23</span><br><span class="line"></span><br><span class="line">REV:2023-04-23T01:21:04Z</span><br><span class="line"></span><br><span class="line">END:VCARD</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;VCARD手机相机扫码或微信扫码,直接保存到通讯录&lt;br&gt;将以下内容生成二维码, 使用手机扫码时将自动弹出保存通讯录,兼容Android&amp;#x2F;IOS&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="前端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vcard" scheme="https://blog.ihogu.com/tags/vcard/"/>
    
  </entry>
  
  <entry>
    <title>electron 解决socket端口被占用问题 启动socket服务,自动尝试可用接口</title>
    <link href="https://blog.ihogu.com/posts/32539/"/>
    <id>https://blog.ihogu.com/posts/32539/</id>
    <published>2023-04-13T00:47:29.000Z</published>
    <updated>2023-05-08T07:29:38.621Z</updated>
    
    <content type="html"><![CDATA[<p>原理是本地写一个config.json,把初始端口放进去,每次启动electron的socket服务时如果发现端口被占用,就更新config.json里的端口号加1,并保存到config.json,然后退出并重启electron,直到找到可用的端口</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;port&quot;</span><span class="punctuation">:</span><span class="number">1081</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; app, <span class="title class_">BrowserWindow</span>, protocol, dialog &#125; = <span class="built_in">require</span>(<span class="string">&quot;electron&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Menu</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;electron&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> myMenu = <span class="built_in">require</span>(<span class="string">&quot;./src/menu.js&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">WebSocket</span> = <span class="built_in">require</span>(<span class="string">&quot;ws&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="comment">//wss通讯服务</span></span><br><span class="line">  <span class="keyword">let</span> wss = &#123;&#125;;</span><br><span class="line">  <span class="title function_">openWs</span>();</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">openWs</span>(<span class="params"></span>) &#123;</span><br><span class="line">    fs.<span class="title function_">readFile</span>(<span class="string">&quot;config.json&quot;</span>, <span class="string">&quot;utf-8&quot;</span>, <span class="function">(<span class="params">err, configFileDataRes</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        dialog.<span class="title function_">showMessageBox</span>(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&quot;info&quot;</span>,</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;读取配置文件失败&quot;</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&quot;请重新安装&quot;</span>,</span><br><span class="line">          <span class="attr">detail</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err),</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">throw</span> err;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> configFileData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(configFileDataRes);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        wss = <span class="keyword">new</span> <span class="title class_">WebSocket</span>.<span class="title class_">Server</span>(&#123; <span class="attr">port</span>: configFileData.<span class="property">port</span> &#125;);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;创建webSocket失败:&quot;</span>, error);</span><br><span class="line">      &#125;</span><br><span class="line">      wss.<span class="title function_">on</span>(<span class="string">&quot;connection&quot;</span>, <span class="function">(<span class="params">ws</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(ws, configFileData.<span class="property">port</span> + <span class="string">&quot;成功了&quot;</span>);</span><br><span class="line">        <span class="comment">/** 调用原生electron接口</span></span><br><span class="line"><span class="comment">         * &#123;&quot;type&quot;:&quot;open_page&quot;,&quot;src&quot;:&quot;pages/play/index.html&quot;,&quot;big&quot;:true&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ws.<span class="title function_">on</span>(<span class="string">&quot;message&quot;</span>, <span class="function">(<span class="params">message</span>) =&gt;</span> &#123;</span><br><span class="line">          message = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(message);</span><br><span class="line">          <span class="keyword">if</span> (message.<span class="property">type</span> == <span class="string">&quot;open_page&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> win = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>();</span><br><span class="line">            win.<span class="title function_">loadFile</span>(message.<span class="property">src</span>);</span><br><span class="line">            win.<span class="property">webContents</span>.<span class="title function_">openDevTools</span>(&#123; <span class="attr">mode</span>: <span class="string">&quot;detach&quot;</span> &#125;);</span><br><span class="line">            <span class="keyword">if</span> (message.<span class="property">big</span>) &#123;</span><br><span class="line">              win.<span class="title function_">maximize</span>();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        ws.<span class="title function_">send</span>(<span class="string">&quot;something&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">      wss.<span class="title function_">on</span>(<span class="string">&quot;error&quot;</span>, <span class="function">(<span class="params">ws</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">storeData</span>(&#123; <span class="attr">port</span>: <span class="built_in">parseInt</span>(configFileData.<span class="property">port</span>) + <span class="number">1</span> &#125;, <span class="string">&quot;config.json&quot;</span>);</span><br><span class="line">        app.<span class="title function_">exit</span>();</span><br><span class="line">        app.<span class="title function_">relaunch</span>();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// /wss通讯服务</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;原理是本地写一个config.json,把初始端口放进去,每次启动electron的socket服务时如果发现端口被占用,就更新config.json里的端口号加1,并保存到config.json,然后退出并重启electron,直到找到可用的端口&lt;/p&gt;
&lt;figure </summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="前端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="electron" scheme="https://blog.ihogu.com/tags/electron/"/>
    
  </entry>
  
  <entry>
    <title>第一次参加半马</title>
    <link href="https://blog.ihogu.com/posts/48124/"/>
    <id>https://blog.ihogu.com/posts/48124/</id>
    <published>2023-03-19T04:50:31.000Z</published>
    <updated>2023-06-16T06:17:00.734Z</updated>
    
    <content type="html"><![CDATA[<p>这周末和女朋友一起参加半马,青岛西海岸风景真不错,新铺的马路贼宽敞,七点多就开始交通管制了,我们只能打车到附近然后走过去 </p><p>比赛现场很热闹,没文化的我现场只能来一句只能来一句人好多啊,气氛真的很好,菜腿第一次参加没敢直接报名半马,报了五公里健康跑😄</p><p>坚持不懈的青春万岁  加油💪奥力给 </p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://harryup-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%281%29.jpg","alt":""},{"url":"https://harryup-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%282%29.jpg","alt":""},{"url":"https://harryup-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%283%29.jpg","alt":""},{"url":"https://harryup-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%284%29.jpg","alt":""},{"url":"https://harryup-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%285%29.jpg","alt":""},{"url":"https://harryup-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%286%29.jpg","alt":""},{"url":"https://harryup-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%287%29.jpg","alt":""},{"url":"https://harryup-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%288%29.jpg","alt":""}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这周末和女朋友一起参加半马,青岛西海岸风景真不错,新铺的马路贼宽敞,七点多就开始交通管制了,我们只能打车到附近然后走过去 &lt;/p&gt;
&lt;p&gt;比赛现场很热闹,没文化的我现场只能来一句只能来一句人好多啊,气氛真的很好,菜腿第一次参加没敢直接报名半马,报了五公里健康跑😄&lt;/p&gt;
</summary>
      
    
    
    
    <category term="随笔" scheme="https://blog.ihogu.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="马拉松" scheme="https://blog.ihogu.com/tags/%E9%A9%AC%E6%8B%89%E6%9D%BE/"/>
    
    <category term="跑步" scheme="https://blog.ihogu.com/tags/%E8%B7%91%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>JS飞入飞出动画 加速动画 换入换出效果</title>
    <link href="https://blog.ihogu.com/posts/274/"/>
    <id>https://blog.ihogu.com/posts/274/</id>
    <published>2023-03-14T01:47:29.000Z</published>
    <updated>2023-05-08T07:29:38.621Z</updated>
    
    <content type="html"><![CDATA[<p>JS飞入飞出动画 加速动画 换入换出效果</p><p>在线预览 <a href="/my/demo/fly.html">&#x2F;my&#x2F;demo&#x2F;fly.html</a> online visit </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;gift-fly&quot;</span> <span class="attr">style</span>=<span class="string">&quot; position: absolute; width: 50px;height: 50px;background-color: #327dff &quot;</span>&gt;</span> 动画盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> flyDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;gift-fly&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">animate</span>(flyDiv, &#123;<span class="string">&quot;left&quot;</span>: <span class="number">500</span>&#125;, <span class="number">3000</span>, <span class="string">&quot;easeIn&quot;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;飞入动画执行完了&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">animate</span>(flyDiv, &#123;<span class="string">&quot;left&quot;</span>: <span class="number">0</span>&#125;, <span class="number">3000</span>, <span class="string">&quot;easeOut&quot;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;飞出动画执行完了&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> elem &#123;HTMLElement&#125; 执行动画的HTML元素</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> params &#123;JSON&#125; 动画执行过过程中需要修改的HTML属性</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> duration &#123;Number&#125; 可选，动画执行时间，单位毫秒</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> easing &#123;String&#125; 可选，动画执行的方式，缓入easeIn、缓出easeOut</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">elem, params, duration, easing</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">success</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             * 描述: tween动画算法。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             * @param Number t: 动画已经执行的时间（实际上时执行多少次/帧数）</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             * @param Number b: 起始位置</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             * @param Number c: 终止位置</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             * @param Number d: 从起始位置到终止位置的经过时间（实际上时执行多少次/帧数）</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             */</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> tween = &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">easeIn</span>: <span class="keyword">function</span> (<span class="params">t, b, c, d</span>) &#123;<span class="comment">//缓入</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> c * (t /= d) * t + b;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">easeOut</span>: <span class="keyword">function</span> (<span class="params">t, b, c, d</span>) &#123;<span class="comment">//缓出</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> -c * (t /= d) * (t - <span class="number">2</span>) + b;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> attribute = &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">get</span>: <span class="keyword">function</span> (<span class="params">elem, attr</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> val;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (elem.<span class="property">currentStyle</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">if</span> (attr === <span class="string">&quot;opacity&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                            val = elem.<span class="property">filters</span>.<span class="property">alpha</span>[attr];</span></span><br><span class="line"><span class="language-javascript">                        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                            val = elem.<span class="property">currentStyle</span>[attr];</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        val = <span class="title function_">getComputedStyle</span>(elem)[attr];</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">if</span> (attr === <span class="string">&quot;opacity&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                            val = <span class="number">100</span> * val;</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> val;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">set</span>: <span class="keyword">function</span> (<span class="params">elem, attr, val</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (attr == <span class="string">&#x27;opacity&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        elem.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&#x27;alpha(opacity=&#x27;</span> + (val) + <span class="string">&#x27;)&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                        elem.<span class="property">style</span>.<span class="property">opacity</span> = (val) / <span class="number">100</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        elem.<span class="property">style</span>[attr] = val + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> effect = &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">animate</span>: <span class="keyword">function</span> (<span class="params">elem, params, duration, easing</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> dt = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>(),</span></span><br><span class="line"><span class="language-javascript">                        b = <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">                        c = <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">                        d = duration || <span class="number">500</span>,</span></span><br><span class="line"><span class="language-javascript">                        fps = <span class="number">1000</span> / <span class="number">60</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> changes = [];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">for</span> (<span class="keyword">let</span> attr <span class="keyword">in</span> params) &#123;</span></span><br><span class="line"><span class="language-javascript">                        b = <span class="built_in">parseFloat</span>(attribute.<span class="title function_">get</span>(elem, attr));</span></span><br><span class="line"><span class="language-javascript">                        c = params[attr] - b;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                        changes.<span class="title function_">push</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">attr</span>: attr,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">b</span>: b,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">c</span>: c</span></span><br><span class="line"><span class="language-javascript">                        &#125;);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    easing = easing || <span class="string">&quot;easeOut&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">let</span> t = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() - dt;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">let</span> b, c, attr;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; changes.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                            b = changes[i].<span class="property">b</span>;</span></span><br><span class="line"><span class="language-javascript">                            c = changes[i].<span class="property">c</span>;</span></span><br><span class="line"><span class="language-javascript">                            attr = changes[i].<span class="property">attr</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                            attribute.<span class="title function_">set</span>(elem, attr, tween[easing](t, b, c, d));</span></span><br><span class="line"><span class="language-javascript">                            <span class="keyword">if</span> (d &lt;= t) &#123;</span></span><br><span class="line"><span class="language-javascript">                                attribute.<span class="title function_">set</span>(elem, attr, params[attr]);</span></span><br><span class="line"><span class="language-javascript">                                <span class="title function_">success</span>();</span></span><br><span class="line"><span class="language-javascript">                                <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">                            &#125;</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                        <span class="built_in">setTimeout</span>(<span class="variable language_">arguments</span>.<span class="property">callee</span>, fps);</span></span><br><span class="line"><span class="language-javascript">                    &#125;, fps);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript">            effect.<span class="title function_">animate</span>(elem, params, duration, easing);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">JS飞入飞出动画 加速动画 换入换出效果  * @param elem {HTMLElement} 执行动画的HTML元素 * @param params {JSON} 动画执行过过程中需要修改的HTML属性  * @param duration {Number} 可选，动画执行时间，单位毫秒   * @param easing {String} 可选，动画执行的方式，缓入easeIn、缓出easeOut</summary>
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="前端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JS" scheme="https://blog.ihogu.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>Go排序结构体struct中字段提升性能,降低内存使用率</title>
    <link href="https://blog.ihogu.com/posts/273/"/>
    <id>https://blog.ihogu.com/posts/273/</id>
    <published>2023-03-13T00:47:29.000Z</published>
    <updated>2023-05-08T07:29:38.618Z</updated>
    
    <content type="html"><![CDATA[<p>将第一个struct改写为第二种可以通过排序结构体struct中字段提升性能,降低内存使用率</p><pre><code class="go">type BadStruct struct &#123;    age          uint8    IdCardNumber uint64    DateOfBirth  uint16&#125;type GoodStruct struct &#123;    age          uint8    DateOfBirth  uint16    IdCardNumber uint64&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;将第一个struct改写为第二种可以通过排序结构体struct中字段提升性能,降低内存使用率&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;go&quot;&gt;type BadStruct struct &amp;#123;
    age          uint8
    IdCardNu</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="go" scheme="https://blog.ihogu.com/tags/go/"/>
    
    <category term="struct" scheme="https://blog.ihogu.com/tags/struct/"/>
    
  </entry>
  
  <entry>
    <title>go ioutil包1.16起弃用 使用io包代替</title>
    <link href="https://blog.ihogu.com/posts/31408/"/>
    <id>https://blog.ihogu.com/posts/31408/</id>
    <published>2022-11-13T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.632Z</updated>
    
    <content type="html"><![CDATA[<p>20 年 10 月份，Go 掌舵人 Russ Cox 已经有废弃 ioutil 包的提案[1]，废弃原因是:io&#x2F;ioutil, like most things with util in the name, has turned out to be a poorly defined and hard to understand collection of things.</p><p>后续的几次代码提交也证实了这一点，从 Go 1.16 开始会废弃 io&#x2F;ioutil 包，相关的功能会挪到 io 包或 os 包</p><p>相关连接 <a href="https://github.com/go-critic/go-critic/issues/1019">https://github.com/go-critic/go-critic/issues/1019</a></p><p>例如 ioutil.NopCloser方法, 改为io.NopCloser方法即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;20 年 10 月份，Go 掌舵人 Russ Cox 已经有废弃 ioutil 包的提案[1]，废弃原因是:io&amp;#x2F;ioutil, like most things with util in the name, has turned out to be a poor</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="go" scheme="https://blog.ihogu.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>go sha256withRSA签名 base64</title>
    <link href="https://blog.ihogu.com/posts/44058/"/>
    <id>https://blog.ihogu.com/posts/44058/</id>
    <published>2022-11-10T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.632Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> utils</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;crypto&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/rand&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/rsa&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/sha256&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/x509&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/base64&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/pem&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**实例</span></span><br><span class="line"><span class="comment">//生成密钥文件</span></span><br><span class="line"><span class="comment">GenerateRSAKey(2048)</span></span><br><span class="line"><span class="comment">//模拟发送方</span></span><br><span class="line"><span class="comment">//要发送的消息</span></span><br><span class="line"><span class="comment">msg := []byte(&quot;hello world&quot;)</span></span><br><span class="line"><span class="comment">//生成签名</span></span><br><span class="line"><span class="comment">sign := GetSign(msg, &quot;private.pem&quot;)</span></span><br><span class="line"><span class="comment">fmt.Println(&quot;signlen lenlen&quot;, string(sign))</span></span><br><span class="line"><span class="comment">//模拟接收方</span></span><br><span class="line"><span class="comment">//接受到的消息</span></span><br><span class="line"><span class="comment">acceptmsg := []byte(&quot;hello world&quot;)</span></span><br><span class="line"><span class="comment">//接受到的签名</span></span><br><span class="line"><span class="comment">acceptsign := sign</span></span><br><span class="line"><span class="comment">//验证签名</span></span><br><span class="line"><span class="comment">result := VerifySign(acceptmsg, acceptsign, &quot;public.pem&quot;)</span></span><br><span class="line"><span class="comment">fmt.Println(&quot;验证结果：&quot;, result)</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成RSA私钥和公钥，保存到文件中</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GenerateRSAKey</span><span class="params">(bits <span class="type">int</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//GenerateKey函数使用随机数据生成器random生成一对具有指定字位数的RSA密钥</span></span><br><span class="line"><span class="comment">//Reader是一个全局、共享的密码用强随机数生成器</span></span><br><span class="line">privateKey, err := rsa.GenerateKey(rand.Reader, bits)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//保存私钥</span></span><br><span class="line"><span class="comment">//通过x509标准将得到的ras私钥序列化为ASN.1 的 DER编码字符串</span></span><br><span class="line">X509PrivateKey := x509.MarshalPKCS1PrivateKey(privateKey)</span><br><span class="line"><span class="comment">//使用pem格式对x509输出的内容进行编码</span></span><br><span class="line"><span class="comment">//创建文件保存私钥</span></span><br><span class="line">privateFile, err := os.Create(<span class="string">&quot;private.pem&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> privateFile.Close()</span><br><span class="line"><span class="comment">//构建一个pem.Block结构体对象</span></span><br><span class="line">privateBlock := pem.Block&#123;Type: <span class="string">&quot;RSA Private Key&quot;</span>, Bytes: X509PrivateKey&#125;</span><br><span class="line"><span class="comment">//将数据保存到文件</span></span><br><span class="line">pem.Encode(privateFile, &amp;privateBlock)</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存公钥</span></span><br><span class="line"><span class="comment">//获取公钥的数据</span></span><br><span class="line">publicKey := privateKey.PublicKey</span><br><span class="line"><span class="comment">//X509对公钥编码</span></span><br><span class="line">X509PublicKey, err := x509.MarshalPKIXPublicKey(&amp;publicKey)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//pem格式编码</span></span><br><span class="line"><span class="comment">//创建用于保存公钥的文件</span></span><br><span class="line">publicFile, err := os.Create(<span class="string">&quot;public.pem&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> publicFile.Close()</span><br><span class="line"><span class="comment">//创建一个pem.Block结构体对象</span></span><br><span class="line">publicBlock := pem.Block&#123;Type: <span class="string">&quot;RSA Public Key&quot;</span>, Bytes: X509PublicKey&#125;</span><br><span class="line"><span class="comment">//保存到文件</span></span><br><span class="line">pem.Encode(publicFile, &amp;publicBlock)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取RSA私钥</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetRSAPrivateKey</span><span class="params">(path <span class="type">string</span>)</span></span> *rsa.PrivateKey &#123;</span><br><span class="line"><span class="comment">//读取文件内容</span></span><br><span class="line">file, err := os.Open(path)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line">info, _ := file.Stat()</span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="type">byte</span>, info.Size())</span><br><span class="line">file.Read(buf)</span><br><span class="line"><span class="comment">//pem解码</span></span><br><span class="line">block, _ := pem.Decode(buf)</span><br><span class="line"><span class="comment">//X509解码</span></span><br><span class="line">privateKey, err := x509.ParsePKCS1PrivateKey(block.Bytes)</span><br><span class="line"><span class="keyword">return</span> privateKey</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取RSA公钥</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetRSAPublicKey</span><span class="params">(path <span class="type">string</span>)</span></span> *rsa.PublicKey &#123;</span><br><span class="line"><span class="comment">//读取公钥内容</span></span><br><span class="line">file, err := os.Open(path)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line">info, _ := file.Stat()</span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="type">byte</span>, info.Size())</span><br><span class="line">file.Read(buf)</span><br><span class="line"><span class="comment">//pem解码</span></span><br><span class="line">block, _ := pem.Decode(buf)</span><br><span class="line"><span class="comment">//x509解码</span></span><br><span class="line">publicKeyInterface, err := x509.ParsePKIXPublicKey(block.Bytes)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">publicKey := publicKeyInterface.(*rsa.PublicKey)</span><br><span class="line"><span class="keyword">return</span> publicKey</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对消息的散列值进行数字签名</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetSign</span><span class="params">(msg []<span class="type">byte</span>, path <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line"><span class="comment">//取得私钥</span></span><br><span class="line">privateKey := GetRSAPrivateKey(path)</span><br><span class="line"><span class="comment">//计算散列值</span></span><br><span class="line">hash := sha256.New()</span><br><span class="line">hash.Write(msg)</span><br><span class="line">bytes := hash.Sum(<span class="literal">nil</span>)</span><br><span class="line"><span class="comment">//SignPKCS1v15使用RSA PKCS#1 v1.5规定的RSASSA-PKCS1-V1_5-SIGN签名方案计算签名</span></span><br><span class="line">sign, err := rsa.SignPKCS1v15(rand.Reader, privateKey, crypto.SHA256, bytes)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(sign)</span><br><span class="line">&#125;</span><br><span class="line">signStr := base64.StdEncoding.EncodeToString(sign)</span><br><span class="line"><span class="keyword">return</span> signStr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证数字签名</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">VerifySign</span><span class="params">(msg []<span class="type">byte</span>, sign <span class="type">string</span>, path <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line"><span class="comment">//取得公钥</span></span><br><span class="line">publicKey := GetRSAPublicKey(path)</span><br><span class="line"><span class="comment">//计算消息散列值</span></span><br><span class="line">hash := sha256.New()</span><br><span class="line">hash.Write(msg)</span><br><span class="line">bytes := hash.Sum(<span class="literal">nil</span>)</span><br><span class="line"><span class="comment">//验证数字签名</span></span><br><span class="line">signBaseDe, _ := base64.StdEncoding.DecodeString(sign)</span><br><span class="line">err := rsa.VerifyPKCS1v15(publicKey, crypto.SHA256, bytes, signBaseDe)</span><br><span class="line"><span class="keyword">return</span> err == <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">生成密钥文件GenerateRSAKey(2048)//模拟发送方//要发送的消息msg := []byte(&quot;hello world&quot;)//生成签名sign := GetSign(msg, &quot;private.pem&quot;)fmt.Println(&quot;signlen lenlen&quot;, string(sign))//模拟接收方//接受到的消息acceptmsg := []byte(&quot;hello world&quot;)//接受到的签名acceptsign := sign//验证签名result := VerifySign(acceptmsg, acceptsign, &quot;public.pem&quot;)fmt.Println(&quot;验证结果：&quot;, result)</summary>
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="go" scheme="https://blog.ihogu.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>go第二次获取body获取不到问题</title>
    <link href="https://blog.ihogu.com/posts/49443/"/>
    <id>https://blog.ihogu.com/posts/49443/</id>
    <published>2022-11-01T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.629Z</updated>
    
    <content type="html"><![CDATA[<p>在使用os.ReadAll(r.Body)方法后,需要执行下面方法,将body重新写回去</p><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">ctx.Request.Body = io.NopCloser(bytes.NewBuffer(signStrByte)) <span class="comment">// 把body再写回去,不然别的地方取不到</span></span><br></pre></td></tr></table></figure><p>经实践发现 使用gin.Context.Bindxxx相关方法 ,也需要执行上述方法重写body</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在使用os.ReadAll(r.Body)方法后,需要执行下面方法,将body重新写回去&lt;/p&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ctx</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>golang gin接口签名sign</title>
    <link href="https://blog.ihogu.com/posts/32888/"/>
    <id>https://blog.ihogu.com/posts/32888/</id>
    <published>2022-10-28T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.631Z</updated>
    
    <content type="html"><![CDATA[<p>golang gin接口签名sign</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">gin.Default().Group(<span class="string">&quot;&quot;</span>).Use(xxx.CheckSign())</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//注册需要签名的路由</span></span><br><span class="line">gin.Default().Group(<span class="string">&quot;testrouter&quot;</span>).POST(<span class="string">&quot;dotest&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">response.Result(<span class="number">401</span>, gin.H&#123;&#125;, <span class="string">&quot;hello&quot;</span>, ctx)</span><br><span class="line">&#125;) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sign.go 签名 验签</p><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> xxx</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;crypto/sha256&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/hex&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/flipped-aurora/gin-vue-admin/server/model/common/response&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">SignWrong  = <span class="string">&quot;sign wrong&quot;</span></span><br><span class="line">SignNull   = <span class="string">&quot;sign null&quot;</span></span><br><span class="line">ApiKeyNull = <span class="string">&quot;sign null&quot;</span></span><br><span class="line">UserWrong  = <span class="string">&quot;username wrong&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CheckSign</span><span class="params">()</span></span> gin.HandlerFunc &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">reqData := &amp;RequestHttp&#123;</span><br><span class="line">Ctx:    c,</span><br><span class="line">Params: <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;&#125;,</span><br><span class="line">&#125;</span><br><span class="line">apiKey := c.Request.FormValue(<span class="string">&quot;api_key&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> apiKey == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">response.Result(<span class="number">401</span>, gin.H&#123;&#125;, ApiKeyNull, c)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">apiSecret := <span class="string">&quot;&quot;</span></span><br><span class="line">signReq := c.Request.FormValue(<span class="string">&quot;sign&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> signReq == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">response.Result(<span class="number">401</span>, gin.H&#123;&#125;, SignNull, c)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">signStr := reqData.RequestParams(<span class="string">&quot;sign&quot;</span>) + apiSecret</span><br><span class="line">fmt.Println(signStr, <span class="string">&quot;signStr&quot;</span>)</span><br><span class="line">signReal := SignEncode(signStr)</span><br><span class="line"><span class="keyword">if</span> signReq != signReal &#123;</span><br><span class="line">response.Result(<span class="number">401</span>, gin.H&#123;&#125;, SignWrong, c)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">c.Next()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@function: SignEncode</span></span><br><span class="line"><span class="comment">//@description: 生成sign</span></span><br><span class="line"><span class="comment">//@param: message string</span></span><br><span class="line"><span class="comment">//@return: sign string</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SignEncode</span><span class="params">(message <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line"><span class="keyword">return</span> GetSHA256HashCode(message)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@function: GetSHA256HashCode</span></span><br><span class="line"><span class="comment">//@description: SHA256生成哈希值</span></span><br><span class="line"><span class="comment">//@param: message string</span></span><br><span class="line"><span class="comment">//@return: hashCode string</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetSHA256HashCode</span><span class="params">(message <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">messageArr := []<span class="type">byte</span>(message)</span><br><span class="line"><span class="comment">//创建一个基于SHA256算法的hash.Hash接口的对象</span></span><br><span class="line">hash := sha256.New()</span><br><span class="line"><span class="comment">//输入数据</span></span><br><span class="line">hash.Write(messageArr)</span><br><span class="line"><span class="comment">//计算哈希值</span></span><br><span class="line">bytes := hash.Sum(<span class="literal">nil</span>)</span><br><span class="line"><span class="comment">//将字符串编码为16进制格式,返回字符串</span></span><br><span class="line">hashCode := hex.EncodeToString(bytes)</span><br><span class="line"><span class="comment">//返回哈希值</span></span><br><span class="line"><span class="keyword">return</span> hashCode</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>get_request.go 获取请求参数,转换请求参数为string,参数key排序</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> xxx</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;sort&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"><span class="string">&quot;sync&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin/binding&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> RequestHttp <span class="keyword">struct</span> &#123;</span><br><span class="line">Ctx    *gin.Context</span><br><span class="line">Params <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">lock   sync.Mutex</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@function: JoinParamsStr</span></span><br><span class="line"><span class="comment">//@description: 请求参数转换字符串</span></span><br><span class="line"><span class="comment">//@param: message string</span></span><br><span class="line"><span class="comment">//@return: a=1&amp;b=2 string</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RequestHttp)</span></span> JoinParamsStr() <span class="type">string</span> &#123;</span><br><span class="line"><span class="comment">//先按key 排序 升序 ASCII 升序</span></span><br><span class="line">keys := <span class="built_in">make</span>([]<span class="type">string</span>, <span class="number">0</span>, <span class="built_in">len</span>(r.Params))</span><br><span class="line"><span class="keyword">for</span> k := <span class="keyword">range</span> r.Params &#123;</span><br><span class="line">keys = <span class="built_in">append</span>(keys, k)</span><br><span class="line">&#125;</span><br><span class="line">sort.Strings(keys)</span><br><span class="line"><span class="keyword">var</span> params []<span class="type">string</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(r.Params) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, k := <span class="keyword">range</span> keys &#123;</span><br><span class="line">params = <span class="built_in">append</span>(params, fmt.Sprintf(<span class="string">&quot;%s=%v&quot;</span>, k, r.Params[k]))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> strings.Join(params, <span class="string">&quot;&amp;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@function: RequestParams</span></span><br><span class="line"><span class="comment">//@description: 获取参数集合</span></span><br><span class="line"><span class="comment">//@param: exclude string 排除key</span></span><br><span class="line"><span class="comment">//@return: hashCode string</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RequestHttp)</span></span> RequestParams(exclude <span class="type">string</span>) <span class="type">string</span> &#123;</span><br><span class="line">ctx := r.Ctx</span><br><span class="line">bindParams := <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;&#125;</span><br><span class="line"><span class="keyword">if</span> ctx.Request.Method == <span class="string">&quot;POST&quot;</span> &#123;</span><br><span class="line">contextType := ctx.Request.Header.Get(<span class="string">&quot;Content-Type&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> contextType == <span class="string">&quot;application/json&quot;</span> &#123;</span><br><span class="line">err := ctx.ShouldBindBodyWith(&amp;bindParams, binding.JSON)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123; <span class="comment">//报错</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;nyx_request_mid_error %v,err: %v \n&quot;</span>, bindParams, err)</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(bindParams) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> bindParams &#123;</span><br><span class="line">r.Add(k, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">_ = ctx.Request.ParseMultipartForm(<span class="number">32</span> &lt;&lt; <span class="number">20</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(ctx.Request.PostForm) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> ctx.Request.PostForm &#123;</span><br><span class="line">r.Add(k, v[<span class="number">0</span>])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">var</span> tmpParams = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>)</span><br><span class="line">err2 := ctx.ShouldBind(&amp;tmpParams)</span><br><span class="line"><span class="keyword">if</span> err2 != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;nyx_request_mid_error %v,err: %v \n&quot;</span>, bindParams, err2)</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> tmpParams &#123;</span><br><span class="line">r.Add(k, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">r.Delete(exclude)</span><br><span class="line"><span class="keyword">return</span> r.JoinParamsStr()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RequestHttp)</span></span> Add(key <span class="type">string</span>, value <span class="keyword">interface</span>&#123;&#125;) &#123;</span><br><span class="line">r.lock.Lock()</span><br><span class="line">r.Params[key] = value</span><br><span class="line">r.lock.Unlock()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RequestHttp)</span></span> Delete(key <span class="type">string</span>) &#123;</span><br><span class="line">r.lock.Lock()</span><br><span class="line"><span class="keyword">if</span> _, ok := r.Params[key]; ok &#123;</span><br><span class="line"><span class="built_in">delete</span>(r.Params, key)</span><br><span class="line">&#125;</span><br><span class="line">r.lock.Unlock()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;golang gin接口签名sign&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gin.Default().Group(&lt;span class=&quot;</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>如何在手机上清除公众号页面授权? 在微信上清除公众号个人信息授权</title>
    <link href="https://blog.ihogu.com/posts/22609/"/>
    <id>https://blog.ihogu.com/posts/22609/</id>
    <published>2022-09-28T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.614Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-首先取关公众号"><a href="#1-首先取关公众号" class="headerlink" title="1.首先取关公众号"></a>1.首先取关公众号</h4><h4 id="2-然后重新搜索公众号名称-找到公众号后点击进入公众号页面"><a href="#2-然后重新搜索公众号名称-找到公众号后点击进入公众号页面" class="headerlink" title="2.然后重新搜索公众号名称,找到公众号后点击进入公众号页面"></a>2.然后重新搜索公众号名称,找到公众号后点击进入公众号页面</h4><h4 id="3-点击右上角三个点-在弹出的菜单中选择”设置”"><a href="#3-点击右上角三个点-在弹出的菜单中选择”设置”" class="headerlink" title="3.点击右上角三个点,在弹出的菜单中选择”设置”"></a>3.点击右上角三个点,在弹出的菜单中选择”设置”</h4><h4 id="4-点击”已获取的信息”"><a href="#4-点击”已获取的信息”" class="headerlink" title="4.点击”已获取的信息”"></a>4.点击”已获取的信息”</h4><h4 id="5-点击管理按钮-删除已授权的信息列-并点击完成"><a href="#5-点击管理按钮-删除已授权的信息列-并点击完成" class="headerlink" title="5.点击管理按钮, 删除已授权的信息列,并点击完成"></a>5.点击管理按钮, 删除已授权的信息列,并点击完成</h4><h4 id="6-再进入到公众号页面-发现需要重新获取授权了"><a href="#6-再进入到公众号页面-发现需要重新获取授权了" class="headerlink" title="6.再进入到公众号页面,发现需要重新获取授权了"></a>6.再进入到公众号页面,发现需要重新获取授权了</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-首先取关公众号&quot;&gt;&lt;a href=&quot;#1-首先取关公众号&quot; class=&quot;headerlink&quot; title=&quot;1.首先取关公众号&quot;&gt;&lt;/a&gt;1.首先取关公众号&lt;/h4&gt;&lt;h4 id=&quot;2-然后重新搜索公众号名称-找到公众号后点击进入公众号页面&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="前端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>JS解析地址栏参数a=1&amp;b=2为对象格式</title>
    <link href="https://blog.ihogu.com/posts/23388/"/>
    <id>https://blog.ihogu.com/posts/23388/</id>
    <published>2022-09-21T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.629Z</updated>
    
    <content type="html"><![CDATA[<p>JS解析地址栏string参数为object对象格式 将 a&#x3D;1&amp;b&#x3D;2 格式转换为对象格式</p><p>将 “a&#x3D;1&amp;b&#x3D;2” 格式转换为 {a: “1”, b: “2”}</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line"><span class="attr">str2Obj</span>: <span class="keyword">function</span> (<span class="params">str</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;string&quot;</span> != <span class="keyword">typeof</span> str) <span class="keyword">return</span> str</span><br><span class="line"><span class="keyword">if</span> (str.<span class="title function_">indexOf</span>(<span class="string">&quot;&amp;&quot;</span>) &lt; <span class="number">0</span> &amp;&amp; str.<span class="title function_">indexOf</span>(<span class="string">&quot;=&quot;</span>) &lt; <span class="number">0</span>) <span class="keyword">return</span> &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> newStr = str.<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>),newOjb = &#123;&#125;</span><br><span class="line">newStr.<span class="title function_">forEach</span>(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (value.<span class="title function_">indexOf</span>(<span class="string">&quot;=&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> newStr1 = value.<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)</span><br><span class="line">newOjb[newStr1[<span class="number">0</span>]] = newStr1[<span class="number">1</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> newOjb</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// test</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">str2Obj</span>(<span class="string">&quot;a=1&amp;b=2&quot;</span>))</span><br><span class="line"><span class="comment">//log:&#123;a: &quot;1&quot;, b: &quot;2&quot;&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;JS解析地址栏string参数为object对象格式 将 a&amp;#x3D;1&amp;amp;b&amp;#x3D;2 格式转换为对象格式&lt;/p&gt;
&lt;p&gt;将 “a&amp;#x3D;1&amp;amp;b&amp;#x3D;2” 格式转换为 {a: “1”, b: “2”}&lt;/p&gt;
&lt;figure class=&quot;h</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="前端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JS" scheme="https://blog.ihogu.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>PHP 邮箱邮件发送 腾讯QQ企业邮件发送</title>
    <link href="https://blog.ihogu.com/posts/5451/"/>
    <id>https://blog.ihogu.com/posts/5451/</id>
    <published>2022-09-20T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.627Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 邮箱邮件发送 腾讯QQ企业邮件发送 单文件版</p><p><a href="https://github.com/harry-1012/PHP_Email_OneFile/tree/main">code:https://github.com/harry-1012/PHP_Email_OneFile&#x2F;tree&#x2F;main</a></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Email</span></span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Type reqData[&quot;title&quot;] 邮件subject 主题</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Type reqData[&quot;content&quot;] 邮件内容</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Type reqData[&quot;fromname&quot;] 发件人姓名</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Type reqData[&quot;receiver&quot;] 收件人邮箱</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> boolean 发送成功会返回true，失败false</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">qqComMailSend</span>(<span class="params"><span class="variable">$reqData</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$reqData</span>)) &#123;</span><br><span class="line">            <span class="variable">$reqData</span> = <span class="variable">$_REQUEST</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$mail</span> = <span class="keyword">new</span> <span class="title class_">Lib_Smtp</span>();</span><br><span class="line">        <span class="variable">$PHPMailer</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;host&#x27;</span> =&gt; <span class="string">&#x27;smtp.exmail.qq.com&#x27;</span>,<span class="comment">//qq邮箱使用smtp.qq.com，qq企业邮箱使用smtp.exmail.qq.com</span></span><br><span class="line">            <span class="string">&#x27;username&#x27;</span> =&gt; <span class="string">&#x27;abc@abc.com&#x27;</span>,<span class="comment">//邮箱登陆账号</span></span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;123456&#x27;</span>,<span class="comment">//邮箱登陆密码，也有可能是独立密码，就是开启pop3/smtp时的授权码</span></span><br><span class="line">            <span class="string">&#x27;port&#x27;</span> =&gt; <span class="number">465</span>,<span class="comment">//默认25，腾云服务器屏蔽25端口，所以用的465</span></span><br><span class="line">            <span class="string">&#x27;ssl&#x27;</span> =&gt; <span class="literal">true</span>,<span class="comment">//是否开启ssl，用465就得开启</span></span><br><span class="line">            <span class="string">&#x27;from&#x27;</span> =&gt; <span class="string">&#x27;abc@abc.com&#x27;</span><span class="comment">//发件人</span></span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$reqData</span>[<span class="string">&quot;fromname&quot;</span>] = <span class="variable">$reqData</span>[<span class="string">&quot;fromname&quot;</span>]?<span class="variable">$reqData</span>[<span class="string">&quot;fromname&quot;</span>]:<span class="variable">$PHPMailer</span>[<span class="string">&quot;from&quot;</span>];</span><br><span class="line">        <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">setServer</span>(<span class="variable">$PHPMailer</span>[<span class="string">&quot;host&quot;</span>], <span class="variable">$PHPMailer</span>[<span class="string">&quot;username&quot;</span>], <span class="variable">$PHPMailer</span>[<span class="string">&quot;password&quot;</span>], <span class="variable">$PHPMailer</span>[<span class="string">&quot;port&quot;</span>], <span class="variable">$PHPMailer</span>[<span class="string">&quot;ssl&quot;</span>]); </span><br><span class="line">        <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">setFrom</span>(<span class="variable">$PHPMailer</span>[<span class="string">&quot;from&quot;</span>]); <span class="comment">//发送者邮箱</span></span><br><span class="line">        <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">setFromName</span>(<span class="variable">$reqData</span>[<span class="string">&quot;fromname&quot;</span>]); <span class="comment">//发送者姓名</span></span><br><span class="line">        <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">setReceiver</span>(<span class="variable">$reqData</span>[<span class="string">&quot;receiver&quot;</span>]); <span class="comment">//接收者邮箱</span></span><br><span class="line">        <span class="comment">//$mail-&gt;addAttachment(&quot;&quot;); //Attachment 附件</span></span><br><span class="line">        <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">setMail</span>(<span class="variable">$reqData</span>[<span class="string">&quot;title&quot;</span>], <span class="variable">$reqData</span>[<span class="string">&quot;content&quot;</span>]); <span class="comment">//标题和内容</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">send</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lib_Smtp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 邮件传输代理用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_userName</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 邮件传输代理密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 邮件传输代理服务器地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_sendServer</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> int 邮件传输代理服务器端口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_port</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 发件人</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_from</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 发件人姓名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_from_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 收件人</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_to</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 抄送</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_cc</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 秘密抄送</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_bcc</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 主题</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_subject</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 邮件正文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_body</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 附件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_attachment</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> reource socket资源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_socket</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> reource 是否是安全连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_isSecurity</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 错误信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_errorMessage</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_debug</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">/*输出调试信息*/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">debug</span>(<span class="params"><span class="variable">$msg</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;_debug) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$msg</span>, <span class="string">&#x27;&lt;br&gt;&#x27;</span>, <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setDebug</span>(<span class="params"><span class="variable">$val</span> = <span class="literal">true</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_debug = <span class="variable">$val</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置邮件传输代理，如果是可以匿名发送有邮件的服务器，只需传递代理服务器地址就行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $server 代理服务器的ip或者域名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $username 认证账号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $password 认证密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $port 代理服务器的端口，smtp默认25号端口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> boolean $isSecurity 到服务器的连接是否为安全连接，默认false</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setServer</span>(<span class="params"><span class="variable">$server</span>, <span class="variable">$username</span> = <span class="string">&quot;&quot;</span>, <span class="variable">$password</span> = <span class="string">&quot;&quot;</span>, <span class="variable">$port</span> = <span class="number">25</span>, <span class="variable">$isSecurity</span> = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_sendServer = <span class="variable">$server</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_port = <span class="variable">$port</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_isSecurity = <span class="variable">$isSecurity</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_userName = <span class="keyword">empty</span>(<span class="variable">$username</span>) ? <span class="string">&quot;&quot;</span> : <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$username</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_password = <span class="keyword">empty</span>(<span class="variable">$password</span>) ? <span class="string">&quot;&quot;</span> : <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$password</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置发件人</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $from 发件人地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setFrom</span>(<span class="params"><span class="variable">$from</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_from = <span class="variable">$from</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置发件人姓名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $from 发件人地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setFromName</span>(<span class="params"><span class="variable">$fromName</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_from_name = <span class="variable">$fromName</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置收件人，多个收件人，调用多次.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $to 收件人地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setReceiver</span>(<span class="params"><span class="variable">$to</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_to)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$this</span>-&gt;_to)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_to = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_to);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_to[] = <span class="variable">$to</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_to)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_to[] = <span class="variable">$to</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_to = <span class="variable">$to</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置抄送，多个抄送，调用多次.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $cc 抄送地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setCc</span>(<span class="params"><span class="variable">$cc</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_cc)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$this</span>-&gt;_cc)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_cc = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_cc);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_cc[] = <span class="variable">$cc</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_cc)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_cc[] = <span class="variable">$cc</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_cc = <span class="variable">$cc</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置秘密抄送，多个秘密抄送，调用多次</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $bcc 秘密抄送地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setBcc</span>(<span class="params"><span class="variable">$bcc</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_bcc)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$this</span>-&gt;_bcc)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_bcc = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_bcc);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_bcc[] = <span class="variable">$bcc</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_bcc)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_bcc[] = <span class="variable">$bcc</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_bcc = <span class="variable">$bcc</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置邮件附件，多个附件，调用多次</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $file 文件地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addAttachment</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;file &quot;</span> . <span class="variable">$file</span> . <span class="string">&quot; does not exist.&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_attachment = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_attachment);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_attachment[] = <span class="variable">$file</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_attachment[] = <span class="variable">$file</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_attachment = <span class="variable">$file</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置邮件信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $body 邮件主题</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $subject 邮件主体内容，可以是纯文本，也可是是HTML文本</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setMail</span>(<span class="params"><span class="variable">$subject</span>, <span class="variable">$body</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_subject = <span class="variable">$subject</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_body = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$body</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">send</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$command</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getCommand</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_isSecurity ? <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">socketSecurity</span>() : <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">socket</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$command</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;_isSecurity ? <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">sendCommandSecurity</span>(<span class="variable">$value</span>[<span class="number">0</span>], <span class="variable">$value</span>[<span class="number">1</span>]) : <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">sendCommand</span>(<span class="variable">$value</span>[<span class="number">0</span>], <span class="variable">$value</span>[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//其实这里也没必要关闭，smtp命令：QUIT发出之后，服务器就关闭了连接，本地的socket资源会自动释放</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_isSecurity ? <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">closeSecutity</span>() : <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回错误信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">error</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_errorMessage)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_errorMessage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回mail命令</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getCommand</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$separator</span> = <span class="string">&quot;----=_Part_&quot;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;_from . <span class="title function_ invoke__">time</span>()) . <span class="title function_ invoke__">uniqid</span>(); <span class="comment">//分隔符</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$command</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="keyword">array</span>(<span class="string">&quot;HELO sendmail\r\n&quot;</span>, <span class="number">250</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;_userName)) &#123;</span><br><span class="line">            <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;AUTH LOGIN\r\n&quot;</span>, <span class="number">334</span>);</span><br><span class="line">            <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_userName . <span class="string">&quot;\r\n&quot;</span>, <span class="number">334</span>);</span><br><span class="line">            <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_password . <span class="string">&quot;\r\n&quot;</span>, <span class="number">235</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置发件人</span></span><br><span class="line">        <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;MAIL FROM: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_from . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">        <span class="variable">$fromname_command</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;_from_name))&#123;</span><br><span class="line">            <span class="variable">$fromname_command</span> = <span class="string">&quot; =?utf-8?B?&quot;</span>. <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$this</span>-&gt;_from_name).<span class="string">&quot;?= &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$header</span> = <span class="string">&quot;FROM:&quot;</span>.<span class="variable">$fromname_command</span>.<span class="string">&quot; &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_from . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置收件人</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_to)) &#123;</span><br><span class="line">            <span class="variable">$count</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_to);</span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$count</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">                <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$i</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                &#125; <span class="keyword">elseif</span> (<span class="variable">$i</span> + <span class="number">1</span> == <span class="variable">$count</span>) &#123;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">            <span class="variable">$header</span> .= <span class="string">&quot;TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置抄送</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_cc)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_cc)) &#123;</span><br><span class="line">                <span class="variable">$count</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_cc);</span><br><span class="line">                <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$count</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">                    <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable">$i</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;CC: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">elseif</span> (<span class="variable">$i</span> + <span class="number">1</span> == <span class="variable">$count</span>) &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;CC: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置秘密抄送</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_bcc)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_bcc)) &#123;</span><br><span class="line">                <span class="variable">$count</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_bcc);</span><br><span class="line">                <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$count</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">                    <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable">$i</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;BCC: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">elseif</span> (<span class="variable">$i</span> + <span class="number">1</span> == <span class="variable">$count</span>) &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;BCC: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//主题</span></span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;Subject: &quot;</span> . <span class="variable language_">$this</span>-&gt;_subject . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">            <span class="comment">//含有附件的邮件头需要声明成这个</span></span><br><span class="line">            <span class="variable">$header</span> .= <span class="string">&quot;Content-Type: multipart/mixed;\r\n&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="comment">//邮件体含有图片资源的需要声明成这个</span></span><br><span class="line">            <span class="variable">$header</span> .= <span class="string">&quot;Content-Type: multipart/related;\r\n&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//html或者纯文本的邮件声明成这个</span></span><br><span class="line">            <span class="variable">$header</span> .= <span class="string">&quot;Content-Type: multipart/alternative;\r\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//邮件头分隔符</span></span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;\t&quot;</span> . <span class="string">&#x27;boundary=&quot;&#x27;</span> . <span class="variable">$separator</span> . <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;\r\nMIME-Version: 1.0\r\n&quot;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;\r\n--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;Content-Type:text/html; charset=utf-8\r\n&quot;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;Content-Transfer-Encoding: base64\r\n\r\n&quot;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="variable language_">$this</span>-&gt;_body . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//加入附件</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_attachment) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">                <span class="variable">$count</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_attachment);</span><br><span class="line">                <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$count</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;\r\n--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;Content-Type: &quot;</span> . <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getMIMEType</span>(<span class="variable">$this</span>-&gt;_attachment[<span class="variable">$i</span>]) . <span class="string">&#x27;; name=&quot;&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;_attachment[<span class="variable">$i</span>]) . <span class="string">&#x27;&quot;&#x27;</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;Content-Transfer-Encoding: base64\r\n&quot;</span>;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&#x27;Content-Disposition: attachment; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;_attachment[<span class="variable">$i</span>]) . <span class="string">&#x27;&quot;&#x27;</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">readFile</span>(<span class="variable">$this</span>-&gt;_attachment[<span class="variable">$i</span>]);</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;\r\n--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;\r\n--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;Content-Type: &quot;</span> . <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getMIMEType</span>(<span class="variable">$this</span>-&gt;_attachment) . <span class="string">&#x27;; name=&quot;&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;_attachment) . <span class="string">&#x27;&quot;&#x27;</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;Content-Transfer-Encoding: base64\r\n&quot;</span>;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&#x27;Content-Disposition: attachment; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;_attachment) . <span class="string">&#x27;&quot;&#x27;</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">readFile</span>(<span class="variable">$this</span>-&gt;_attachment);</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;\r\n--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//结束邮件数据发送</span></span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;\r\n.\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;DATA\r\n&quot;</span>, <span class="number">354</span>);</span><br><span class="line">        <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="variable">$header</span>, <span class="number">250</span>);</span><br><span class="line">        <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;QUIT\r\n&quot;</span>, <span class="number">221</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$command</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送命令</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $command 发送到服务器的smtp命令</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $code 期望服务器返回的响应吗</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">sendCommand</span>(<span class="params"><span class="variable">$command</span>, <span class="variable">$code</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//debug(&#x27;Send command:&#x27; . $command . &#x27;,expected code:&#x27; . $code );</span></span><br><span class="line">        <span class="comment">//发送命令给服务器</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">socket_write</span>(<span class="variable">$this</span>-&gt;_socket, <span class="variable">$command</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$command</span>))) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//当邮件内容分多次发送时，没有$code，服务器没有返回</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$code</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//读取服务器返回</span></span><br><span class="line">                <span class="variable">$data</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">socket_read</span>(<span class="variable">$this</span>-&gt;_socket, <span class="number">1024</span>));</span><br><span class="line">                <span class="comment">//debug( &#x27;response:&#x27; . $data);</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$data</span>) &#123;</span><br><span class="line">                    <span class="variable">$pattern</span> = <span class="string">&quot;/^&quot;</span> . <span class="variable">$code</span> . <span class="string">&quot;/&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>, <span class="variable">$data</span>)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="variable">$data</span> . <span class="string">&quot;|**| command:&quot;</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="title function_ invoke__">socket_strerror</span>(<span class="title function_ invoke__">socket_last_error</span>());</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="title function_ invoke__">socket_strerror</span>(<span class="title function_ invoke__">socket_last_error</span>());</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送命令</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $command 发送到服务器的smtp命令</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $code 期望服务器返回的响应吗</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">sendCommandSecurity</span>(<span class="params"><span class="variable">$command</span>, <span class="variable">$code</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//debug(&#x27;Send command:&#x27; . $command . &#x27;,expected code:&#x27; . $code );</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">fwrite</span>(<span class="variable">$this</span>-&gt;_socket, <span class="variable">$command</span>)) &#123;</span><br><span class="line">                <span class="comment">//当邮件内容分多次发送时，没有$code，服务器没有返回</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$code</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//读取服务器返回</span></span><br><span class="line">                <span class="variable">$data</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">fread</span>(<span class="variable">$this</span>-&gt;_socket, <span class="number">1024</span>));</span><br><span class="line">                <span class="comment">//debug( &#x27;response:&#x27; . $data );</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$data</span>) &#123;</span><br><span class="line">                    <span class="variable">$pattern</span> = <span class="string">&quot;/^&quot;</span> . <span class="variable">$code</span> . <span class="string">&quot;/&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>, <span class="variable">$data</span>)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="variable">$data</span> . <span class="string">&quot;|**| command:&quot;</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error: &quot;</span> . <span class="variable">$command</span> . <span class="string">&quot; send failed&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取附件文件内容，返回base64编码后的文件内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $file 文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">readFile</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file_obj</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$file_obj</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;file &quot;</span> . <span class="variable">$file</span> . <span class="string">&quot; dose not exist&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取附件MIME类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $file 文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getMIMEType</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$mime</span> = <span class="title function_ invoke__">mime_content_type</span>(<span class="variable">$file</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/gif|jpg|png|jpeg/&quot;</span>, <span class="variable">$mime</span>)) &#123;</span><br><span class="line">                <span class="variable">$mime</span> = <span class="string">&quot;application/octet-stream&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$mime</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 建立到服务器的网络连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">socket</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//创建socket资源</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_socket = <span class="title function_ invoke__">socket_create</span>(AF_INET, SOCK_STREAM, <span class="title function_ invoke__">getprotobyname</span>(<span class="string">&#x27;tcp&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;_socket) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="title function_ invoke__">socket_strerror</span>(<span class="title function_ invoke__">socket_last_error</span>());</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">socket_set_block</span>(<span class="variable">$this</span>-&gt;_socket); <span class="comment">//设置阻塞模式</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//连接服务器</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">socket_connect</span>(<span class="variable">$this</span>-&gt;_socket, <span class="variable">$this</span>-&gt;_sendServer, <span class="variable">$this</span>-&gt;_port)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="title function_ invoke__">socket_strerror</span>(<span class="title function_ invoke__">socket_last_error</span>());</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$str</span> = <span class="title function_ invoke__">socket_read</span>(<span class="variable">$this</span>-&gt;_socket, <span class="number">1024</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">strpos</span>(<span class="variable">$str</span>, <span class="string">&quot;220&quot;</span>)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="variable">$str</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 建立到服务器的SSL网络连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">socketSecurity</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$remoteAddr</span> = <span class="string">&quot;tcp://&quot;</span> . <span class="variable language_">$this</span>-&gt;_sendServer . <span class="string">&quot;:&quot;</span> . <span class="variable language_">$this</span>-&gt;_port;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_socket = <span class="title function_ invoke__">stream_socket_client</span>(<span class="variable">$remoteAddr</span>, <span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="number">30</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;_socket) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="variable">$errstr</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置加密连接，默认是ssl，如果需要tls连接，可以查看php手册stream_socket_enable_crypto函数的解释</span></span><br><span class="line">        <span class="title function_ invoke__">stream_socket_enable_crypto</span>(<span class="variable">$this</span>-&gt;_socket, <span class="literal">true</span>, STREAM_CRYPTO_METHOD_SSLv23_CLIENT);</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">stream_set_blocking</span>(<span class="variable">$this</span>-&gt;_socket, <span class="number">1</span>); <span class="comment">//设置阻塞模式</span></span><br><span class="line">        <span class="variable">$str</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$this</span>-&gt;_socket, <span class="number">1024</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">strpos</span>(<span class="variable">$str</span>, <span class="string">&quot;220&quot;</span>)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="variable">$str</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭socket</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_socket) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$this</span>-&gt;_socket)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_socket-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;No resource can to be close&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭安全socket</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">closeSecutity</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_socket) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$this</span>-&gt;_socket)) &#123;</span><br><span class="line">            <span class="title function_ invoke__">stream_socket_shutdown</span>(<span class="variable">$this</span>-&gt;_socket, STREAM_SHUT_WR);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;No resource can to be close&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PHP 邮箱邮件发送 腾讯QQ企业邮件发送 单文件版&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/harry-1012/PHP_Email_OneFile/tree/main&quot;&gt;code:https://github.com/harry-1012/</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP批量模糊清空Redis redis-&gt;scan key*</title>
    <link href="https://blog.ihogu.com/posts/32761/"/>
    <id>https://blog.ihogu.com/posts/32761/</id>
    <published>2022-09-06T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.627Z</updated>
    
    <content type="html"><![CDATA[<p>PHP批量模糊清空Redis</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$redis</span> = <span class="keyword">new</span> <span class="title class_">\Redis</span>();</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">connect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="number">6379</span>);  </span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">setOption</span>(<span class="title class_">\Redis</span>::<span class="variable constant_">OPT_SCAN</span>, <span class="title class_">\Redis</span>::<span class="variable constant_">SCAN_RETRY</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$arr_keys</span> = <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">scan</span>(<span class="literal">NULL</span>, <span class="string">&quot;key_*&quot;</span>, <span class="number">5</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">call_user_func_array</span>([<span class="variable">$redis</span>, <span class="string">&#x27;del&#x27;</span>], <span class="variable">$arr_keys</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">var_export</span>(<span class="variable">$arr_keys</span>, <span class="literal">true</span>) . PHP_EOL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PHP批量模糊清空Redis&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="数据库" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>go利用nginx实现热重载热更新平滑重启 golang不停服更新 go热升级</title>
    <link href="https://blog.ihogu.com/posts/11256/"/>
    <id>https://blog.ihogu.com/posts/11256/</id>
    <published>2022-09-05T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.629Z</updated>
    
    <content type="html"><![CDATA[<p>平滑重启(热重启)是指WebServer在重启的时候不会中断已有请求的执行&#x2F;该特性在不同的项目版本发布的时候特别有用,例如，当需要先后发布两个版本：A、B，那么在A执行的过程当中,将服务平滑重启至B版本,具体做法如下</p><p>利用nginx的反向代理转发go服务端口,例如服务apiv1端口是1001,服务apiv2端口是1002, 现有nginx.conf配置如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    # golang api</span><br><span class="line">    location /golangapi/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:1001/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设现在我们需要将服务平滑重启至apiv2:1002,则只需要将nginx配置改为:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name abc.com;</span><br><span class="line">    # golang api</span><br><span class="line">    location /golangapi/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:1002/;#这里更改端口号</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存nginx配置后,执行&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s reload命令重载配置,即可实现平滑重启</p><p>在reload过程中,nginx会在保持原有apiv1请求的前提下实现平滑重启,新的[abc.com&#x2F;golangapi&#x2F;]请求将指向apiv2服务</p><p>如果在reload过程中,打开的连接数量过多,请求时间过长,可以通过修改nginx参数’worker_shutdown_timeout’来设置过期时间来关闭reload过程中仍然打开的连接.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;平滑重启(热重启)是指WebServer在重启的时候不会中断已有请求的执行&amp;#x2F;该特性在不同的项目版本发布的时候特别有用,例如，当需要先后发布两个版本：A、B，那么在A执行的过程当中,将服务平滑重启至B版本,具体做法如下&lt;/p&gt;
&lt;p&gt;利用nginx的反向代理转发go</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>gorm Raw查询报错 sql converting argument $1 type unsupported type struct {}, a struct; invalid value, should be pointer to struct or slice; invalid value, should be pointer to struct or slice</title>
    <link href="https://blog.ihogu.com/posts/26189/"/>
    <id>https://blog.ihogu.com/posts/26189/</id>
    <published>2022-09-03T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.630Z</updated>
    
    <content type="html"><![CDATA[<p>golang gorm 查询时提示如下,即使sqlParam已经初始化过也一直提示无效值</p><h4 id="报错内容"><a href="#报错内容" class="headerlink" title="报错内容"></a>报错内容</h4><p>sql: converting argument $1 type: unsupported type struct {}, a struct; invalid value, should be pointer to struct or slice; invalid value, should be pointer to struct or slice</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因:"></a>原因:</h4><p>发起查询时,Raw方法第二个参数不能为空,并且需要在Raw方法的第一个sql语句中有调用@第二个参数中的字段</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案:"></a>解决方案:</h4><p>增加 Placeholder , 初始化值为1,并在sql语句中调用 @Placeholder , 或者根据请求情况,增加判断是否要传入Raw方法的第二个参数</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">sql := <span class="string">&quot;SELECT * FROM test WHERE @Placeholder &quot;</span> <span class="comment">//SELECT * FROM test WHERE 1</span></span><br><span class="line"><span class="keyword">var</span> sqlParam <span class="keyword">struct</span> &#123;</span><br><span class="line">Applyno       <span class="type">string</span></span><br><span class="line">Status        *<span class="type">int</span></span><br><span class="line">Placeholder   <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line">sqlParam.Placeholder = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> info.Applyno != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">sql += <span class="string">&quot; AND applyno = @Applyno &quot;</span></span><br><span class="line">sqlParam.Applyno = info.Applyno</span><br><span class="line">&#125;</span><br><span class="line">dbRawErr := db.Raw(sql, sqlParam).Scan(&amp;dataList).Error</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;golang gorm 查询时提示如下,即使sqlParam已经初始化过也一直提示无效值&lt;/p&gt;
&lt;h4 id=&quot;报错内容&quot;&gt;&lt;a href=&quot;#报错内容&quot; class=&quot;headerlink&quot; title=&quot;报错内容&quot;&gt;&lt;/a&gt;报错内容&lt;/h4&gt;&lt;p&gt;sql: conve</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>go goroutine chan 并发/通道 异步处理微信订单分账</title>
    <link href="https://blog.ihogu.com/posts/56249/"/>
    <id>https://blog.ihogu.com/posts/56249/</id>
    <published>2022-06-03T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.632Z</updated>
    
    <content type="html"><![CDATA[<p>最近在开发微信服务商,申请分账需要对每个订单单独发起,于是用到了golang的协程</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, runtime.NumCPU())</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(wechatOrderList); i++ &#123;</span><br><span class="line">        <span class="keyword">go</span> modifyWxOrderProfit(&amp;wechatOrderList[i], ch)</span><br><span class="line">        ch &lt;- i</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">close</span>(ch)</span><br><span class="line"><span class="comment">// 处理分账订单</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">modifyWxOrderProfit</span><span class="params">(wechatOrder *order.WechatOrder, ch <span class="keyword">chan</span> <span class="type">int</span>)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 发起微信订单分账请求</span></span><br><span class="line">        <span class="comment">// client.POST()...</span></span><br><span class="line">        <span class="keyword">for</span> v := <span class="keyword">range</span> ch &#123;</span><br><span class="line">                fmt.Println(<span class="string">&quot;当前异步处理的是第&quot;</span>,v,<span class="string">&quot;个订单&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在开发微信服务商,申请分账需要对每个订单单独发起,于是用到了golang的协程&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ch := &lt;spa</summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="go" scheme="https://blog.ihogu.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Python批量替换文件名,Python批量修改文件名前缀</title>
    <link href="https://blog.ihogu.com/posts/41707/"/>
    <id>https://blog.ihogu.com/posts/41707/</id>
    <published>2022-04-30T13:12:04.000Z</published>
    <updated>2023-05-08T07:29:38.627Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment">#设定文件路径</span></span><br><span class="line">path=<span class="string">&quot;F:\\需要修改的文件路径\\&quot;</span></span><br><span class="line"><span class="comment">#遍历文件</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">    <span class="keyword">if</span> os.path.isfile(os.path.join(path,file))==<span class="literal">True</span>:</span><br><span class="line"><span class="comment">#设置新文件名</span></span><br><span class="line">        new_name=file.replace(<span class="string">&quot;要替换的老的文件名内容&quot;</span>,<span class="string">&quot;新的文件名内容&quot;</span>)</span><br><span class="line"><span class="comment">#重命名文件</span></span><br><span class="line">        os.rename(os.path.join(path,file),os.path.join(path,new_name))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;complete!&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span </summary>
      
    
    
    
    <category term="开发" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="后端" scheme="https://blog.ihogu.com/categories/%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Python" scheme="https://blog.ihogu.com/tags/Python/"/>
    
  </entry>
  
</feed>
